name: CI at Devel Branch
run-name: ${{ github.actor }} is deploying at devel branch üöÄ
on: 
  push:
    branches:
      - devel
      - deploy_changes
env:
  RELEASE_ID: rc-${{ github.run_id }} 
jobs:
  checkout:  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: 'metrics-app'
          ref: 'deploy_changes'
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Download playbook
        uses: actions/checkout@v3
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'rciam/rciam-deploy'   
          ref: 'devel'
          path: 'roles'
      - name: Download inventory
        uses: actions/checkout@v3
        with:
          repository: 'grnet/rciam-deploy-inv'   
          ref: 'master'
          ssh-key: ${{ secrets.DEPLOY_READ_SECRET }}
          path: 'inventory'
      - name: Run playbook (create react_config file)
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: metricsservers.yml
          # Optional, directory where playbooks live
          directory: ./roles
          key: ${{ secrets.DEPLOY_READ_SECRET }}
          # Optional, encrypted vault password
          vault_password: ${{secrets.VAULT_PASSWORD}}
          options: |
            --inventory ${{ github.workspace }}/inventory/rciam-metrics-dev/hosts.ini
            --tags rciam-metrics:config-local
            -u debian
      - name: List files in the repository
        run: |
          ls -la ${{ github.workspace }}/inventory/rciam-metrics-dev/files
          mv ${{ github.workspace }}/inventory/rciam-metrics-dev/files/config.json ${{ github.workspace }}/metrics-app/javascript/src/config.json
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v3
        with:
          name: react-application
          path: | 
            ${{ github.workspace }}/metrics-app
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}/metrics-app/javascript; npm install
      - name: Build React application
        run: |
          cd ${{ github.workspace }}/metrics-app/javascript; CI=false npm run build
      # Share artifact inside workflow
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Create release branch
        run: cd ${{ github.workspace }}/metrics-app/; git checkout -b ${{ env.RELEASE_ID }}
      - name: Initialize mandatory git config
        working-directory: ./metrics-app
        run: |
          git config user.name "GitHub Actions"  
          git config user.email noreply@github.com
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.RELEASE_ID }}
          directory: ./metrics-app
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v3
        with:
          name: react-github-actions-build
          path: | 
            ${{ github.workspace }}/metrics-app/javascript/build
            ${{ github.workspace }}/metrics-app/app
            ${{ github.workspace }}/metrics-app/requirements.txt
      - run: echo "üçè This job's status is ${{ job.status }}."
  release:
    runs-on: ubuntu-latest
    # We specify that deploys needs to
    # finish before we create a release
    needs: checkout
    steps:
      # Download previously shared build
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: react-github-actions-build
      - name: Compress action step
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: ./
          files: |
            app/
            javascript/
            requirements.txt
          outPath: react-github-actions-release-build.tar.gz
      # Upload as an artifact of the current workflow
      - name: Upload build zip artifact
        uses: actions/upload-artifact@v1
        with:
          name: react-github-actions-release-build.tar.gz
          path: react-github-actions-release-build.tar.gz
      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ env.RELEASE_ID }}
          prerelease: false
          files: |
            react-github-actions-release-build.tar.gz
  deploy:
    runs-on: ubuntu-latest
    # We specify that deploys needs to
    # finish before we create a release
    needs: release
    steps:
      - name: Download playbook
        uses: actions/checkout@v3
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'rciam/rciam-deploy'   
          ref: 'devel'
          path: 'roles'
      - name: Download inventory
        uses: actions/checkout@v3
        with:
          repository: 'grnet/rciam-deploy-inv'   
          ref: 'master'
          ssh-key: ${{ secrets.DEPLOY_READ_SECRET }}
          path: 'inventory'
      - name: Run playbook (deploy rciam-metrics) with release ${{ env.RELEASE_ID }}
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: metricsservers.yml
          # Optional, directory where playbooks live
          directory: ./roles
          key: ${{ secrets.DEPLOY_READ_SECRET }}
          # Optional, encrypted vault password
          vault_password: ${{secrets.VAULT_PASSWORD}}
          options: |
            --inventory ${{ github.workspace }}/inventory/rciam-metrics-dev/hosts.ini
            --tags rciam-metrics:config
            -u debian
            --extra-vars "metrics_latest_release=${{ env.RELEASE_ID }}"